/*
ONE CARGO TRACKING API

Cargo tacking details is provided based on DCSA standards. (1.2)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package one

import (
	"encoding/json"
)

// TransportEventAllOf struct for TransportEventAllOf
type TransportEventAllOf struct {
	EventType *string `json:"eventType,omitempty"`
	// The reference for the transport, e.g. when the mode of transport is a vessel, the transport reference will be the vessel IMO number.
	TransportReference string `json:"transportReference"`
	// The transport leg reference will be specific per mode of transport: - Vessel: Voyage number as specified by the vessel operator - Truck: Not yet specified - Rail: Not yet specified - Barge: Not yet specified. 
	TransportLegReference string `json:"transportLegReference"`
	// The code to identify the specific type of facility.
	FacilityTypeCode string `json:"facilityTypeCode"`
	// The UN Location Code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country.
	UNLocationCode string `json:"UNLocationCode"`
	// The code used for identifying the specific facility.
	FacilityCode string `json:"facilityCode"`
	// An alternative way to capture the facility when no standardized DCSA facility code can be found.
	OtherFacility *string `json:"otherFacility,omitempty"`
	// A code specifying a type of transport mode.
	ModeOfTransportCode *string `json:"modeOfTransportCode,omitempty"`
}

// NewTransportEventAllOf instantiates a new TransportEventAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportEventAllOf(transportReference string, transportLegReference string, facilityTypeCode string, uNLocationCode string, facilityCode string) *TransportEventAllOf {
	this := TransportEventAllOf{}
	this.TransportReference = transportReference
	this.TransportLegReference = transportLegReference
	this.FacilityTypeCode = facilityTypeCode
	this.UNLocationCode = uNLocationCode
	this.FacilityCode = facilityCode
	return &this
}

// NewTransportEventAllOfWithDefaults instantiates a new TransportEventAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportEventAllOfWithDefaults() *TransportEventAllOf {
	this := TransportEventAllOf{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *TransportEventAllOf) GetEventType() string {
	if o == nil || o.EventType == nil {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetEventTypeOk() (*string, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *TransportEventAllOf) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *TransportEventAllOf) SetEventType(v string) {
	o.EventType = &v
}

// GetTransportReference returns the TransportReference field value
func (o *TransportEventAllOf) GetTransportReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportReference
}

// GetTransportReferenceOk returns a tuple with the TransportReference field value
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetTransportReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransportReference, true
}

// SetTransportReference sets field value
func (o *TransportEventAllOf) SetTransportReference(v string) {
	o.TransportReference = v
}

// GetTransportLegReference returns the TransportLegReference field value
func (o *TransportEventAllOf) GetTransportLegReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransportLegReference
}

// GetTransportLegReferenceOk returns a tuple with the TransportLegReference field value
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetTransportLegReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransportLegReference, true
}

// SetTransportLegReference sets field value
func (o *TransportEventAllOf) SetTransportLegReference(v string) {
	o.TransportLegReference = v
}

// GetFacilityTypeCode returns the FacilityTypeCode field value
func (o *TransportEventAllOf) GetFacilityTypeCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FacilityTypeCode
}

// GetFacilityTypeCodeOk returns a tuple with the FacilityTypeCode field value
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetFacilityTypeCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FacilityTypeCode, true
}

// SetFacilityTypeCode sets field value
func (o *TransportEventAllOf) SetFacilityTypeCode(v string) {
	o.FacilityTypeCode = v
}

// GetUNLocationCode returns the UNLocationCode field value
func (o *TransportEventAllOf) GetUNLocationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UNLocationCode
}

// GetUNLocationCodeOk returns a tuple with the UNLocationCode field value
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetUNLocationCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UNLocationCode, true
}

// SetUNLocationCode sets field value
func (o *TransportEventAllOf) SetUNLocationCode(v string) {
	o.UNLocationCode = v
}

// GetFacilityCode returns the FacilityCode field value
func (o *TransportEventAllOf) GetFacilityCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FacilityCode
}

// GetFacilityCodeOk returns a tuple with the FacilityCode field value
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetFacilityCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FacilityCode, true
}

// SetFacilityCode sets field value
func (o *TransportEventAllOf) SetFacilityCode(v string) {
	o.FacilityCode = v
}

// GetOtherFacility returns the OtherFacility field value if set, zero value otherwise.
func (o *TransportEventAllOf) GetOtherFacility() string {
	if o == nil || o.OtherFacility == nil {
		var ret string
		return ret
	}
	return *o.OtherFacility
}

// GetOtherFacilityOk returns a tuple with the OtherFacility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetOtherFacilityOk() (*string, bool) {
	if o == nil || o.OtherFacility == nil {
		return nil, false
	}
	return o.OtherFacility, true
}

// HasOtherFacility returns a boolean if a field has been set.
func (o *TransportEventAllOf) HasOtherFacility() bool {
	if o != nil && o.OtherFacility != nil {
		return true
	}

	return false
}

// SetOtherFacility gets a reference to the given string and assigns it to the OtherFacility field.
func (o *TransportEventAllOf) SetOtherFacility(v string) {
	o.OtherFacility = &v
}

// GetModeOfTransportCode returns the ModeOfTransportCode field value if set, zero value otherwise.
func (o *TransportEventAllOf) GetModeOfTransportCode() string {
	if o == nil || o.ModeOfTransportCode == nil {
		var ret string
		return ret
	}
	return *o.ModeOfTransportCode
}

// GetModeOfTransportCodeOk returns a tuple with the ModeOfTransportCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportEventAllOf) GetModeOfTransportCodeOk() (*string, bool) {
	if o == nil || o.ModeOfTransportCode == nil {
		return nil, false
	}
	return o.ModeOfTransportCode, true
}

// HasModeOfTransportCode returns a boolean if a field has been set.
func (o *TransportEventAllOf) HasModeOfTransportCode() bool {
	if o != nil && o.ModeOfTransportCode != nil {
		return true
	}

	return false
}

// SetModeOfTransportCode gets a reference to the given string and assigns it to the ModeOfTransportCode field.
func (o *TransportEventAllOf) SetModeOfTransportCode(v string) {
	o.ModeOfTransportCode = &v
}

func (o TransportEventAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if true {
		toSerialize["transportReference"] = o.TransportReference
	}
	if true {
		toSerialize["transportLegReference"] = o.TransportLegReference
	}
	if true {
		toSerialize["facilityTypeCode"] = o.FacilityTypeCode
	}
	if true {
		toSerialize["UNLocationCode"] = o.UNLocationCode
	}
	if true {
		toSerialize["facilityCode"] = o.FacilityCode
	}
	if o.OtherFacility != nil {
		toSerialize["otherFacility"] = o.OtherFacility
	}
	if o.ModeOfTransportCode != nil {
		toSerialize["modeOfTransportCode"] = o.ModeOfTransportCode
	}
	return json.Marshal(toSerialize)
}

type NullableTransportEventAllOf struct {
	value *TransportEventAllOf
	isSet bool
}

func (v NullableTransportEventAllOf) Get() *TransportEventAllOf {
	return v.value
}

func (v *NullableTransportEventAllOf) Set(val *TransportEventAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportEventAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportEventAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportEventAllOf(val *TransportEventAllOf) *NullableTransportEventAllOf {
	return &NullableTransportEventAllOf{value: val, isSet: true}
}

func (v NullableTransportEventAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportEventAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


