/*
ONE CARGO TRACKING API

Cargo tacking details is provided based on DCSA standards. (1.2)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package one

import (
	"encoding/json"
)

// InlineResponse500 struct for InlineResponse500
type InlineResponse500 struct {
	ErrorCode *int32 `json:"errorCode,omitempty"`
	ErrorMessages *string `json:"errorMessages,omitempty"`
}

// NewInlineResponse500 instantiates a new InlineResponse500 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse500() *InlineResponse500 {
	this := InlineResponse500{}
	return &this
}

// NewInlineResponse500WithDefaults instantiates a new InlineResponse500 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse500WithDefaults() *InlineResponse500 {
	this := InlineResponse500{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *InlineResponse500) GetErrorCode() int32 {
	if o == nil || o.ErrorCode == nil {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse500) GetErrorCodeOk() (*int32, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *InlineResponse500) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *InlineResponse500) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise.
func (o *InlineResponse500) GetErrorMessages() string {
	if o == nil || o.ErrorMessages == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse500) GetErrorMessagesOk() (*string, bool) {
	if o == nil || o.ErrorMessages == nil {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *InlineResponse500) HasErrorMessages() bool {
	if o != nil && o.ErrorMessages != nil {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given string and assigns it to the ErrorMessages field.
func (o *InlineResponse500) SetErrorMessages(v string) {
	o.ErrorMessages = &v
}

func (o InlineResponse500) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorMessages != nil {
		toSerialize["errorMessages"] = o.ErrorMessages
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse500 struct {
	value *InlineResponse500
	isSet bool
}

func (v NullableInlineResponse500) Get() *InlineResponse500 {
	return v.value
}

func (v *NullableInlineResponse500) Set(val *InlineResponse500) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse500) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse500) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse500(val *InlineResponse500) *NullableInlineResponse500 {
	return &NullableInlineResponse500{value: val, isSet: true}
}

func (v NullableInlineResponse500) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse500) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


