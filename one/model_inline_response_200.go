/*
ONE CARGO TRACKING API

Cargo tacking details is provided based on DCSA standards. (1.2)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package one

import (
	"encoding/json"
)

// InlineResponse200 struct for InlineResponse200
type InlineResponse200 struct {
	RefreshTokenExpiresIn *string `json:"refresh_token_expires_in,omitempty"`
	ApiProductList *string `json:"api_product_list,omitempty"`
	ApiProductListJson *string `json:"api_product_list_json,omitempty"`
	OrganizationName *string `json:"organization_name,omitempty"`
	DeveloperEmail *string `json:"developer.email,omitempty"`
	TokenType *string `json:"token_type,omitempty"`
	IssuedAt *string `json:"issued_at,omitempty"`
	ClientId *string `json:"client_id,omitempty"`
	AccessToken *string `json:"access_token,omitempty"`
	ApplicationName *string `json:"application_name,omitempty"`
	Scope *string `json:"scope,omitempty"`
	ExpiresIn *string `json:"expires_in,omitempty"`
	RefreshCount *string `json:"refresh_count,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewInlineResponse200 instantiates a new InlineResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// NewInlineResponse200WithDefaults instantiates a new InlineResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200WithDefaults() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// GetRefreshTokenExpiresIn returns the RefreshTokenExpiresIn field value if set, zero value otherwise.
func (o *InlineResponse200) GetRefreshTokenExpiresIn() string {
	if o == nil || o.RefreshTokenExpiresIn == nil {
		var ret string
		return ret
	}
	return *o.RefreshTokenExpiresIn
}

// GetRefreshTokenExpiresInOk returns a tuple with the RefreshTokenExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetRefreshTokenExpiresInOk() (*string, bool) {
	if o == nil || o.RefreshTokenExpiresIn == nil {
		return nil, false
	}
	return o.RefreshTokenExpiresIn, true
}

// HasRefreshTokenExpiresIn returns a boolean if a field has been set.
func (o *InlineResponse200) HasRefreshTokenExpiresIn() bool {
	if o != nil && o.RefreshTokenExpiresIn != nil {
		return true
	}

	return false
}

// SetRefreshTokenExpiresIn gets a reference to the given string and assigns it to the RefreshTokenExpiresIn field.
func (o *InlineResponse200) SetRefreshTokenExpiresIn(v string) {
	o.RefreshTokenExpiresIn = &v
}

// GetApiProductList returns the ApiProductList field value if set, zero value otherwise.
func (o *InlineResponse200) GetApiProductList() string {
	if o == nil || o.ApiProductList == nil {
		var ret string
		return ret
	}
	return *o.ApiProductList
}

// GetApiProductListOk returns a tuple with the ApiProductList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetApiProductListOk() (*string, bool) {
	if o == nil || o.ApiProductList == nil {
		return nil, false
	}
	return o.ApiProductList, true
}

// HasApiProductList returns a boolean if a field has been set.
func (o *InlineResponse200) HasApiProductList() bool {
	if o != nil && o.ApiProductList != nil {
		return true
	}

	return false
}

// SetApiProductList gets a reference to the given string and assigns it to the ApiProductList field.
func (o *InlineResponse200) SetApiProductList(v string) {
	o.ApiProductList = &v
}

// GetApiProductListJson returns the ApiProductListJson field value if set, zero value otherwise.
func (o *InlineResponse200) GetApiProductListJson() string {
	if o == nil || o.ApiProductListJson == nil {
		var ret string
		return ret
	}
	return *o.ApiProductListJson
}

// GetApiProductListJsonOk returns a tuple with the ApiProductListJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetApiProductListJsonOk() (*string, bool) {
	if o == nil || o.ApiProductListJson == nil {
		return nil, false
	}
	return o.ApiProductListJson, true
}

// HasApiProductListJson returns a boolean if a field has been set.
func (o *InlineResponse200) HasApiProductListJson() bool {
	if o != nil && o.ApiProductListJson != nil {
		return true
	}

	return false
}

// SetApiProductListJson gets a reference to the given string and assigns it to the ApiProductListJson field.
func (o *InlineResponse200) SetApiProductListJson(v string) {
	o.ApiProductListJson = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *InlineResponse200) GetOrganizationName() string {
	if o == nil || o.OrganizationName == nil {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetOrganizationNameOk() (*string, bool) {
	if o == nil || o.OrganizationName == nil {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *InlineResponse200) HasOrganizationName() bool {
	if o != nil && o.OrganizationName != nil {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *InlineResponse200) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetDeveloperEmail returns the DeveloperEmail field value if set, zero value otherwise.
func (o *InlineResponse200) GetDeveloperEmail() string {
	if o == nil || o.DeveloperEmail == nil {
		var ret string
		return ret
	}
	return *o.DeveloperEmail
}

// GetDeveloperEmailOk returns a tuple with the DeveloperEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetDeveloperEmailOk() (*string, bool) {
	if o == nil || o.DeveloperEmail == nil {
		return nil, false
	}
	return o.DeveloperEmail, true
}

// HasDeveloperEmail returns a boolean if a field has been set.
func (o *InlineResponse200) HasDeveloperEmail() bool {
	if o != nil && o.DeveloperEmail != nil {
		return true
	}

	return false
}

// SetDeveloperEmail gets a reference to the given string and assigns it to the DeveloperEmail field.
func (o *InlineResponse200) SetDeveloperEmail(v string) {
	o.DeveloperEmail = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *InlineResponse200) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *InlineResponse200) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *InlineResponse200) SetTokenType(v string) {
	o.TokenType = &v
}

// GetIssuedAt returns the IssuedAt field value if set, zero value otherwise.
func (o *InlineResponse200) GetIssuedAt() string {
	if o == nil || o.IssuedAt == nil {
		var ret string
		return ret
	}
	return *o.IssuedAt
}

// GetIssuedAtOk returns a tuple with the IssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetIssuedAtOk() (*string, bool) {
	if o == nil || o.IssuedAt == nil {
		return nil, false
	}
	return o.IssuedAt, true
}

// HasIssuedAt returns a boolean if a field has been set.
func (o *InlineResponse200) HasIssuedAt() bool {
	if o != nil && o.IssuedAt != nil {
		return true
	}

	return false
}

// SetIssuedAt gets a reference to the given string and assigns it to the IssuedAt field.
func (o *InlineResponse200) SetIssuedAt(v string) {
	o.IssuedAt = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *InlineResponse200) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *InlineResponse200) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *InlineResponse200) SetClientId(v string) {
	o.ClientId = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *InlineResponse200) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *InlineResponse200) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *InlineResponse200) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *InlineResponse200) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *InlineResponse200) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *InlineResponse200) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *InlineResponse200) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *InlineResponse200) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *InlineResponse200) SetScope(v string) {
	o.Scope = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *InlineResponse200) GetExpiresIn() string {
	if o == nil || o.ExpiresIn == nil {
		var ret string
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetExpiresInOk() (*string, bool) {
	if o == nil || o.ExpiresIn == nil {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *InlineResponse200) HasExpiresIn() bool {
	if o != nil && o.ExpiresIn != nil {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given string and assigns it to the ExpiresIn field.
func (o *InlineResponse200) SetExpiresIn(v string) {
	o.ExpiresIn = &v
}

// GetRefreshCount returns the RefreshCount field value if set, zero value otherwise.
func (o *InlineResponse200) GetRefreshCount() string {
	if o == nil || o.RefreshCount == nil {
		var ret string
		return ret
	}
	return *o.RefreshCount
}

// GetRefreshCountOk returns a tuple with the RefreshCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetRefreshCountOk() (*string, bool) {
	if o == nil || o.RefreshCount == nil {
		return nil, false
	}
	return o.RefreshCount, true
}

// HasRefreshCount returns a boolean if a field has been set.
func (o *InlineResponse200) HasRefreshCount() bool {
	if o != nil && o.RefreshCount != nil {
		return true
	}

	return false
}

// SetRefreshCount gets a reference to the given string and assigns it to the RefreshCount field.
func (o *InlineResponse200) SetRefreshCount(v string) {
	o.RefreshCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200) SetStatus(v string) {
	o.Status = &v
}

func (o InlineResponse200) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RefreshTokenExpiresIn != nil {
		toSerialize["refresh_token_expires_in"] = o.RefreshTokenExpiresIn
	}
	if o.ApiProductList != nil {
		toSerialize["api_product_list"] = o.ApiProductList
	}
	if o.ApiProductListJson != nil {
		toSerialize["api_product_list_json"] = o.ApiProductListJson
	}
	if o.OrganizationName != nil {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if o.DeveloperEmail != nil {
		toSerialize["developer.email"] = o.DeveloperEmail
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.IssuedAt != nil {
		toSerialize["issued_at"] = o.IssuedAt
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.AccessToken != nil {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.ApplicationName != nil {
		toSerialize["application_name"] = o.ApplicationName
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.ExpiresIn != nil {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if o.RefreshCount != nil {
		toSerialize["refresh_count"] = o.RefreshCount
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200 struct {
	value *InlineResponse200
	isSet bool
}

func (v NullableInlineResponse200) Get() *InlineResponse200 {
	return v.value
}

func (v *NullableInlineResponse200) Set(val *InlineResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200(val *InlineResponse200) *NullableInlineResponse200 {
	return &NullableInlineResponse200{value: val, isSet: true}
}

func (v NullableInlineResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


