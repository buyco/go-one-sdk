/*
ONE CARGO TRACKING API

Cargo tacking details is provided based on DCSA standards. (1.2)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package one

import (
	"encoding/json"
)

// InlineResponse401 struct for InlineResponse401
type InlineResponse401 struct {
	ErrorCode *string `json:"ErrorCode,omitempty"`
	Error *string `json:"Error,omitempty"`
}

// NewInlineResponse401 instantiates a new InlineResponse401 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse401() *InlineResponse401 {
	this := InlineResponse401{}
	return &this
}

// NewInlineResponse401WithDefaults instantiates a new InlineResponse401 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse401WithDefaults() *InlineResponse401 {
	this := InlineResponse401{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *InlineResponse401) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse401) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *InlineResponse401) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *InlineResponse401) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InlineResponse401) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse401) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InlineResponse401) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InlineResponse401) SetError(v string) {
	o.Error = &v
}

func (o InlineResponse401) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if o.Error != nil {
		toSerialize["Error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse401 struct {
	value *InlineResponse401
	isSet bool
}

func (v NullableInlineResponse401) Get() *InlineResponse401 {
	return v.value
}

func (v *NullableInlineResponse401) Set(val *InlineResponse401) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse401) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse401) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse401(val *InlineResponse401) *NullableInlineResponse401 {
	return &NullableInlineResponse401{value: val, isSet: true}
}

func (v NullableInlineResponse401) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse401) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


