{
  "openapi": "3.0.1",
  "info": {
    "title": "ONE CARGO TRACKING API",
    "description": "Cargo tacking details is provided based on DCSA standards. (1.2)",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://apis.one-line.com"
    }
  ],
  "paths": {
    "/v1/oauth/accesstoken": {
      "post": {
        "security": [
          {
            "basicAuth": []
          }
        ],
        "description": "Publish access token for OAuth authentication.",
        "parameters": [
          {
            "name": "grant_type",
            "description": "client_credentials",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "client_credentials"
          },
          {
            "name": "apikey",
            "description": "client key gotten by registering App",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "oeF32A5QrKe0k8lLQk1J9GJ2F1b5WV4H"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refresh_token_expires_in": {
                      "type": "string",
                      "example": "0"
                    },
                    "api_product_list": {
                      "type": "string",
                      "example": "[\"CARGOTRACKING_STAGE\"]"
                    },
                    "api_product_list_json": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "CARGOTRACKING_STAGE"
                      ]
                    },
                    "organization_name": {
                      "type": "string",
                      "example": "one"
                    },
                    "developer.email": {
                      "type": "string",
                      "example": "ocean_network_express@one-line.com"
                    },
                    "token_type": {
                      "type": "string",
                      "example": "BearerToken"
                    },
                    "issued_at": {
                      "type": "string",
                      "example": "1593665959269"
                    },
                    "client_id": {
                      "type": "string",
                      "example": "PwhzOSvHYAJoPTGUoBeRACGSeo9uRcnA"
                    },
                    "access_token": {
                      "type": "string",
                      "example": "ZbO1okuEH4cyQ0DaAFLlzTaRZ1b2"
                    },
                    "application_name": {
                      "type": "string",
                      "example": "bf1a51d2-d4f7-4c22-8430-110d8687494a"
                    },
                    "scope": {
                      "type": "string",
                      "example": ""
                    },
                    "expires_in": {
                      "type": "string",
                      "example": "3599"
                    },
                    "refresh_count": {
                      "type": "string",
                      "example": "0"
                    },
                    "status": {
                      "type": "string",
                      "example": "approved"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ErrorCode": {
                      "type": "string",
                      "example": "invalid_request"
                    },
                    "Error": {
                      "type": "string",
                      "example": "API Key is Invalid"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://apis.one-line.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://apis.one-line.com"
        }
      ]
    },
    "/v1/cargotracking/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find events by type, Booking Reference, Bill of Lading or Equipment Reference.",
        "description": "Returns all events filtered by the parameters.",
        "parameters": [
          {
            "in": "query",
            "name": "eventType",
            "description": "The type of event(s) to filter by.",
            "required": false,
            "schema": {
              "description": "A list of event types. Default is all events",
              "example": [
                "EQUIPMENT",
                "SHIPMENT",
                "TRANSPORT",
                "TRANSPORTEQUIPMENT"
              ],
              "default": [
                "EQUIPMENT",
                "SHIPMENT",
                "TRANSPORT",
                "TRANSPORTEQUIPMENT"
              ],
              "type": "array",
              "items": {
                "description": "The Event Type of the object.",
                "nullable": false,
                "type": "string",
                "enum": [
                  "EQUIPMENT",
                  "SHIPMENT",
                  "TRANSPORT",
                  "TRANSPORTEQUIPMENT"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "bookingReference",
            "description": "The identifier for a shipment, which is issued by and unique within each of the carriers.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "billOfLadingNumber",
            "description": "Bill of lading number is an identifier that links to a shipment. Bill of Lading is the legal document issued to the customer, which confirms the carrier's receipt of the cargo from the customer acknowledging goods being shipped and specifying the terms of delivery.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "equipmentReference",
            "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "oeF32A5QrKe0k8lLQk1J9GJ2F1b5WV4H",
            "description": "valid apikey"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Bearer dTBdp1iCX2dw40xPneuWA2FSIekK",
            "description": "valid access_token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response returning a list of Track & Trace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sampleEvent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters passed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "format": "int32",
                      "example": 400
                    },
                    "errorMessages": {
                      "type": "string",
                      "example": "Invalid parameters passed, eventType must be one of EQUIPMENT, SHIPMENT, TRANSPORT, TRANSPORTEQUIPMENT"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "test-uuid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "format": "int32",
                      "example": 401
                    },
                    "errorMessages": {
                      "type": "string",
                      "enum": [
                        "USER IS UNAUTHORIZED",
                        "INVALID ACCESS TOKEN",
                        "EXPIRED ACCESS TOKEN"
                      ],
                      "example": "User is unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "User is forbidden"
          },
          "500": {
            "description": "An error has occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "format": "int32",
                      "example": 500
                    },
                    "errorMessages": {
                      "type": "string",
                      "example": "An error has occurred"
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "format": "int32",
                      "example": 504
                    },
                    "errorMessages": {
                      "type": "string",
                      "example": "Gateway Timeout"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://apis.one-line.com"
          }
        ]
      },
      "servers": [
        {
          "url": "https://apis.one-line.com"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "event": {
        "description": "The event entity is described as a generalization of all the specific event categories. An event always takes place in relation to a shipment and can additionally be linked to a transport or an equipment",
        "type": "object",
        "properties": {
          "eventID": {
            "type": "string",
            "example": 1,
            "description": "The unique identifier for the Equipment Event ID/Transport Event ID/Shipment Event ID."
          },
          "eventType": {
            "description": "The Event Type of the object.",
            "nullable": false,
            "type": "string",
            "enum": [
              "EQUIPMENT",
              "SHIPMENT",
              "TRANSPORT",
              "TRANSPORTEQUIPMENT"
            ]
          },
          "eventDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2019-11-12T07:41:00+08:30",
            "description": "The local date and time, where the event took place, in ISO 8601 format."
          },
          "eventClassifierCode": {
            "type": "string",
            "example": "ACT",
            "description": "Code for the event classifier, either PLN, ACT or EST."
          },
          "eventTypeCode": {
            "type": "string",
            "example": "ARRI",
            "description": "Unique identifier for Event Type Code."
          }
        },
        "required": [
          "eventID",
          "eventType",
          "eventDateTime",
          "eventClassifierCode",
          "eventTypeCode"
        ]
      },
      "shipmentEvent": {
        "description": "The shipment event entity is a specialization of the event entity to support specification of data that only applies to a shipment event.",
        "allOf": [
          {
            "$ref": "#/components/schemas/event"
          },
          {
            "type": "object",
            "properties": {
              "eventType": {
                "type": "string",
                "example": "SHIPMENT",
                "nullable": false,
                "enum": [
                  "SHIPMENT"
                ]
              },
              "shipmentInformationTypeCode": {
                "type": "string",
                "example": "SRM",
                "description": "The code to identify the type of information that is related to the shipment."
              }
            },
            "required": [
              "shipmentInformationTypeCode"
            ]
          }
        ]
      },
      "transportEvent": {
        "description": "The transport event entity is a specialization of the event entity to support specification of data that only applies to a transport event.",
        "allOf": [
          {
            "$ref": "#/components/schemas/event"
          },
          {
            "type": "object",
            "properties": {
              "eventType": {
                "type": "string",
                "example": "TRANSPORT",
                "nullable": false,
                "enum": [
                  "TRANSPORT"
                ]
              },
              "transportReference": {
                "type": "string",
                "example": 9648714,
                "description": "The reference for the transport, e.g. when the mode of transport is a vessel, the transport reference will be the vessel IMO number."
              },
              "transportLegReference": {
                "type": "string",
                "example": "025E",
                "description": "The transport leg reference will be specific per mode of transport:\n- Vessel: Voyage number as specified by the vessel operator\n- Truck: Not yet specified\n- Rail: Not yet specified\n- Barge: Not yet specified.\n"
              },
              "facilityTypeCode": {
                "type": "string",
                "example": "POTE",
                "description": "The code to identify the specific type of facility."
              },
              "UNLocationCode": {
                "type": "string",
                "example": "USNYC",
                "description": "The UN Location Code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country."
              },
              "facilityCode": {
                "type": "string",
                "example": "AEAUHADT",
                "description": "The code used for identifying the specific facility."
              },
              "otherFacility": {
                "type": "string",
                "example": "Depot location or address",
                "description": "An alternative way to capture the facility when no standardized DCSA facility code can be found."
              },
              "modeOfTransportCode": {
                "type": "integer",
                "example": 1,
                "description": "A code specifying a type of transport mode."
              }
            },
            "required": [
              "transportReference",
              "transportLegReference",
              "facilityTypeCode",
              "UNLocationCode",
              "facilityCode"
            ]
          }
        ]
      },
      "equipmentEvent": {
        "description": "The equipment event entity is a specialization of the event entity to support specification of data that only applies to an equipment event.",
        "allOf": [
          {
            "$ref": "#/components/schemas/event"
          },
          {
            "type": "object",
            "properties": {
              "eventType": {
                "type": "string",
                "example": "EQUIPMENT",
                "nullable": false,
                "enum": [
                  "EQUIPMENT"
                ]
              },
              "equipmentReference": {
                "type": "string",
                "example": "APZU4812090",
                "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible. If a container is not yet assigned to a shipment, the interface cannot return any information when an equipment reference is given as input. If a container is assigned to an (active) shipment, the interface returns information on the active shipment."
              },
              "facilityTypeCode": {
                "type": "string",
                "example": "POTE",
                "description": "The code to identify the specific type of facility."
              },
              "UNLocationCode": {
                "type": "string",
                "example": "USNYC",
                "description": "The UN Location Code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country."
              },
              "facilityCode": {
                "type": "string",
                "example": "AEAUHADT",
                "description": "The code used for identifying the specific facility."
              },
              "otherFacility": {
                "type": "string",
                "example": "Depot location or address",
                "description": "An alternative way to capture the facility when no standardized DCSA facility code can be found."
              },
              "emptyIndicatorCode": {
                "type": "string",
                "example": "Empty",
                "description": "Code to denote whether the equipment is empty or laden."
              }
            },
            "required": [
              "facilityTypeCode",
              "UNLocationCode",
              "facilityCode",
              "emptyIndicatorCode"
            ]
          }
        ]
      },
      "transportEquipmentEvent": {
        "description": "The transport equipment event entity is a specialization of the event entity to support specification of data that applies to both transport and equipment events.",
        "allOf": [
          {
            "$ref": "#/components/schemas/event"
          },
          {
            "type": "object",
            "properties": {
              "eventType": {
                "type": "string",
                "example": "TRANSPORTEQUIPMENT",
                "nullable": false,
                "enum": [
                  "TRANSPORTEQUIPMENT"
                ]
              },
              "transportReference": {
                "type": "string",
                "example": 9648714,
                "description": "The reference for the transport, e.g. when the mode of transport is a vessel, the transport reference will be the vessel IMO number."
              },
              "transportLegReference": {
                "type": "string",
                "example": "025E",
                "description": "The transport leg reference will be specific per mode of transport:\n- Vessel: Voyage number as specified by the vessel operator\n- Truck: Not yet specified\n- Rail: Not yet specified\n- Barge: Not yet specified.\n"
              },
              "equipmentReference": {
                "type": "string",
                "example": "APZU4812090",
                "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible. If a container is not yet assigned to a shipment, the interface cannot return any information when an equipment reference is given as input. If a container is assigned to an (active) shipment, the interface returns information on the active shipment."
              },
              "facilityTypeCode": {
                "type": "string",
                "example": "POTE",
                "description": "The code to identify the specific type of facility."
              },
              "UNLocationCode": {
                "type": "string",
                "example": "USNYC",
                "description": "The UN Location Code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country."
              },
              "facilityCode": {
                "type": "string",
                "example": "AEAUHADT",
                "description": "The code used for identifying the specific facility."
              },
              "otherFacility": {
                "type": "string",
                "example": "Depot location or address",
                "description": "An alternative way to capture the facility when no standardized DCSA facility code can be found."
              },
              "emptyIndicatorCode": {
                "type": "string",
                "example": "Empty",
                "description": "Code to denote whether the equipment is empty or laden."
              },
              "modeOfTransportCode": {
                "type": "string",
                "example": 1,
                "description": "A code specifying a type of transport mode."
              }
            },
            "required": [
              "transportReference",
              "transportLegReference",
              "facilityTypeCode",
              "UNLocationCode",
              "facilityCode",
              "emptyIndicatorCode"
            ]
          }
        ]
      },
      "sampleEvent": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "eventType"
              },
              "anyOf": [
                {
                  "$ref": "#/components/schemas/transportEvent"
                },
                {
                  "$ref": "#/components/schemas/shipmentEvent"
                },
                {
                  "$ref": "#/components/schemas/equipmentEvent"
                },
                {
                  "$ref": "#/components/schemas/transportEquipmentEvent"
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}